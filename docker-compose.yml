version: '3.5'
services:
  api1: &api
    #image: docker.io/akitaonrails/rinhabackendapi-nim-jester:latest
    build: ./
    hostname: api1
    environment:
      - DB_HOST=postgres
      - DB_POOL_SIZE=100
    depends_on:
      - postgres
    expose:
      - "3000"
    networks:
      - mynetwork
    deploy:
      resources:
        limits:
          cpus: '0.55'
          memory: '0.4GB'

  api2:
    <<: *api
    hostname: api2

  nginx: # Load Balancer
    image: docker.io/nginx:latest
    command: ["nginx", "-g", "daemon off;"]
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    ulimits:
      nproc: 1000000
      nofile:
        soft: 1000000
        hard: 1000000
    networks:
      - mynetwork
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '0.3GB'

  postgres: # Banco de dados
    image: docker.io/postgres
    hostname: postgres
    environment:
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: password
    command: postgres -c 'max_connections=450'
    expose:
      - "5432"
    volumes:
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    networks:
      - mynetwork
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '1.9GB'

networks:
  mynetwork:
    driver: bridge
